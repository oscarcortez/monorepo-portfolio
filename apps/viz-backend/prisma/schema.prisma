generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FlywaySchemaHistory {
  installedRank Int      @id(map: "flyway_schema_history_pk") @map("installed_rank")
  version       String?  @db.VarChar(50)
  description   String   @db.VarChar(200)
  type          String   @db.VarChar(20)
  script        String   @db.VarChar(1000)
  checksum      Int?
  installedBy   String   @map("installed_by") @db.VarChar(100)
  installedOn   DateTime @default(now()) @map("installed_on") @db.Timestamp(6)
  executionTime Int      @map("execution_time")
  success       Boolean

  @@index([success], map: "flyway_schema_history_s_idx")
  @@map("flyway_schema_history")
}

model HeroGreeting {
  heroGreetingId Int          @id @default(autoincrement()) @map("hero_greeting_id")
  userId         Int          @map("user_id")
  title          String
  subtitle       String
  footer         String
  language       LanguageEnum @default(en)
  users          Users        @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "fk_hero_greeting_user")

  @@map("hero_greeting")
}

model Users {
  userId       Int            @id @default(autoincrement()) @map("user_id")
  uuid         String         @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(100)
  name         String         @db.VarChar(100)
  passwordHash String         @map("password_hash")
  deletedAt    DateTime?      @map("deleted_at") @db.Timestamp(6)
  createdAt    DateTime       @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime       @default(now()) @map("updated_at") @db.Timestamptz(6)
  heroGreeting HeroGreeting[]

  @@map("users")
}

enum LanguageEnum {
  en
  es
  fr
  de

  @@map("language_enum")
}
